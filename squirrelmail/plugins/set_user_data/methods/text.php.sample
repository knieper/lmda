<?php

/*
 * Configuration file for text data handler
 *
 * SquirrelMail Set User Data Plugin
 * Version 1.0
 *
 * Copyright (c) 2009 Ian Goldstein <ian@novoops.com>
 * Licensed under the GNU GPL. For full terms see the file COPYING
 *
 * @package plugins
 * @subpackage set_user_data
 *
 */ 
 
 




// Set this to the full path to the user data file
//
$settings['file'] = '/path/to/file';



// Set this to 1 to enable comment lines (starting with '#') to be skipped
//
$settings['comments'] = 0;



// Set this to 1 to enable line continuation (i.e. non-empty lines that
// begin with whitespace are considered continuation of previous line)
//
$settings['linecontinue'] = 0;



// Set this to the delimiter character (defaults to comma). If it is set to 
// the phrase 'space', it will use either space or tab characters.
//
$settings['delimiter'] = ',';



// These settings allow the username, full name and email address fields
// to be configured. The username field defaults to 1 (the first field),
// the full name field defaults to 2 (the second field), and the email
// address field defaults to 3 (the third field).
//
// Setting any of these fields to 0 indicates that it does not exist in
// the file and will need to be retreived from another data source or
// derived using rules.
//
$settings['userpos'] = 1;
$settings['namepos'] = 2;
$settings['emailpos'] = 3;



// The mode setting controls how this data handler manages multiple email
// addresses per user:
//
//   0 = multiple email addresses per username not expected (default)
//   1 = multiple email addresses allowed in email address field
//   2 = multiple lines for user allowed, one email address per line
//
$settings['mode'] = 0;



// When mode (above) is set to 1, this determine the separator character
// used to delimit multiple email addresses in the email address field. If
// it is set to the phrase 'space', it will use either space or tab
// characters. The default is ' ' (i.e. just the space character).
//
$settings['separator'] = ' ';



// Rules can be used to modify lookup values as well as results. In addition,
// if a value cannot be retrieved directly from an external source, it is
// possible to derive the value using rules. See the RULES document for
// complete details on rule syntax.
//
// There are 4 types of rules defined below. Some are used prior to a lookup
// to allow the key value used for the lookup to be modified. Other are
// used after the lookup to adjust the results.
//
// For each type of rule, the total number of rules must be set. If set to 0
// then that rule type will not be used. After the number of rules are set,
// each rule must be listed in consecutive order.
//
// See the passwd.php.sample file for an example set of rules.


// Data key rules are used to adjust the key value used to lookup user data.
// The key value is typically the username, but it can be adjusted as needed
// prior to the search using rules.
//
$settings['datakeyrules'] = 0;
//$settings['datakeyrule1'] = '';


// Data rules are used after the data has been located to derive and/or
// adjust the email address or full name.
//
$settings['datarules'] = 0;
//$settings['datarule1'] = '';


// Login key rules are used to adjust the key value used to lookup logins by
// email when login lookups are enabled. The key value is typically the login
// name, but can be adjusted as needed prior to the search using rules.
//
$settings['loginkeyrules'] = 0;
//$settings['loginkeyrule1'] = '';


// Login rules are used after the login lookup has been done to further adjust
// the login name as needed.
//
$settings['loginrules'] = 0;
//$settings['loginrule1'] = '';



// THE FOLLOWING VALUE SHOULD ***NOT*** BE CHANGED
//
// This setting indicates the actual data handler to be used in
// order to retrieve the data. If this config file has been
// renamed or copied to an alternate file, the following setting
// must still remain set as-is in order to access the proper
// file in the set_user_data/handlers directory.
//
$settings['handler'] = 'text';



?>
